name: Envia fotos para APIs
on:
  workflow_dispatch:
  schedule:
    - cron: '0 1,6,9,15,17,21 * * *' # 22h, 3h, 6h, 12h, 14h, 18h cobrindo manh√£, tarde, noite
jobs:
  run-benchmark:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Busca todo o hist√≥rico para evitar conflitos
          token: ${{ secrets.GITHUB_TOKEN }}
      
      # --- Bloco de configura√ß√£o do Node.js ---
      - name: Configura Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Instala depend√™ncias do Node.js
        run: npm install
      # --- Fim do bloco Node.js ---
      
      # --- Bloco de configura√ß√£o do Python ---
      - name: Configura Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Instala depend√™ncias do Python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      # --- Fim do bloco Python ---
      
      - name: Roda script python
        env:
          # Passa os segredos do GitHub para o script como vari√°veis de ambiente
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          MOONDREAM_API_KEY: ${{ secrets.MOONDREAM_API_KEY }}
        run: python script.py
      
      - name: Configura Git
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'github-actions-bot@github.com'
      
      - name: Commit e push dos resultados com retry
        run: |
          # Verifica se h√° mudan√ßas para commitar
          git add resultados/
          
          if ! git diff --staged --quiet; then
            git commit -m "üìä Adiciona novos resultados de benchmark"
            
            # Tenta fazer push com retry em caso de conflito
            max_attempts=5
            attempt=1
            
            while [ $attempt -le $max_attempts ]; do
              echo "üîÑ Tentativa $attempt de $max_attempts..."
              
              # Pull com rebase antes do push para sincronizar
              git pull --rebase origin main || {
                echo "‚ö†Ô∏è  Pull falhou, tentando resolver..."
                git rebase --abort 2>/dev/null || true
                git pull --rebase origin main
              }
              
              # Tenta fazer push
              if git push origin main; then
                echo "‚úÖ Push realizado com sucesso!"
                exit 0
              else
                echo "‚ö†Ô∏è  Push falhou, aguardando 10 segundos antes de tentar novamente..."
                sleep 10
                attempt=$((attempt + 1))
              fi
            done
            
            echo "‚ùå Falha ao fazer push ap√≥s $max_attempts tentativas"
            exit 1
          else
            echo "‚ÑπÔ∏è  Nenhum resultado novo para commitar."
          fi
